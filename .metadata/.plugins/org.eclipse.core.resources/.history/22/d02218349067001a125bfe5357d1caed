package mysql.database.com.register;

import java.io.File;
import java.io.IOException;
import java.io.UnsupportedEncodingException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.google.zxing.BarcodeFormat;
import com.google.zxing.EncodeHintType;
import com.google.zxing.MultiFormatWriter;
import com.google.zxing.WriterException;
import com.google.zxing.client.j2se.MatrixToImageWriter;
import com.google.zxing.common.BitMatrix;
import com.google.zxing.qrcode.decoder.ErrorCorrectionLevel;

@Service
public class RegisterService {

	@Autowired
	private RegisterRepository registerRepo;
	
	
	public void newRegisteration(RegisterModel obj){
		registerRepo.save(obj);
	}
	
	public void updateRegisteration(RegisterModel obj,String id){
		registerRepo.save(obj);
	}
	
	public List<RegisterModel> show_allRegisteration(){
		List<RegisterModel> reg = new ArrayList<>();
		registerRepo.findAll().forEach(reg::add);
		return reg;
	}
	
	public Optional<RegisterModel> show_oneRegisteration(String id){
		return registerRepo.findById(id);
	}
	
	public void deleteRegisteration(String id){
		registerRepo.deleteById(id);
	}
	
	public void qrCodeGenerator(RegisterModel obj){
		File f = new File("C:\\QRCODE");
		if(!f.exists()) {
			f.mkdir();
		}
		String profold="C:\\QRCODE\\";
		String pfold=profold.concat("\\AllEmptyQrCodes\\");
		File f1 = new File(pfold);
		if(!f1.exists()) {
			f1.mkdir();
		}
		String ss="C:\\QRCODE\\AllEmptyQrCodes\\";
		String qrCodeData="aa"; 
		String filePath = ss.concat("\\").concat(qrCodeData).concat(".jpeg");
		String charset = "UTF-8"; // or "ISO-8859-1"
		Map hintMap1 = new HashMap();
		hintMap1.put(EncodeHintType.ERROR_CORRECTION, ErrorCorrectionLevel.L);
		createQRCode(qrCodeData, filePath, charset, hintMap1, 20, 20);
		System.out.println("QR Code image of " + qrCodeData + " created successfully!");
	}
	
	public void createQRCode(String qrCodeData, String filePath,
			String charset, Map hintMap, int qrCodeheight, int qrCodewidth) {
		BitMatrix matrix = null;
		try {
			matrix = new MultiFormatWriter().encode(
					new String(qrCodeData.getBytes(charset), charset),
					BarcodeFormat.QR_CODE, qrCodewidth, qrCodeheight, hintMap);
		} catch (UnsupportedEncodingException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (WriterException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		try {
			MatrixToImageWriter.writeToFile(matrix, filePath.substring(filePath
					.lastIndexOf('.') + 1), new File(filePath));
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
}
